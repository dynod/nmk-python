config:

    # Python package name (to be configured at project level)
    pythonPackage: UNKNOWN
    pythonPackageForWheel:
        __resolver__: nmk_python.build.PythonPackageForWheel

    # Python artifacts directory
    pythonArtifacts: ${outputDir}/artifacts

    # Python source distribution + wheel artifacts
    pythonDist: ${pythonArtifacts}/${pythonPackage}-${pythonVersion}.tar.gz
    pythonWheel: ${pythonArtifacts}/${pythonPackageForWheel}-${pythonVersion}-py3-none-any.whl

    # Add setup file for build config
    pythonSetupCfgFiles:
        - ${BASEDIR}/setup/build.cfg

    # Python package dependencies (also contributed to venv)
    pythonPackageRequirements: []
    venvPkgDeps:
        - setuptools
        - wheel
        - ${pythonPackageRequirements}

    # Python files to be ignored
    gitIgnoredFiles:
        - .eggs/
        - "*.egg-info/"
        - "*.pyc"
        - __pycache__
        - build/

tasks:

    # Python module build
    py.build:
        description: Build python package
        emoji: ":snake:.:hammer:"
        deps:
            - py.setup
            - py.analyze
        appendToDeps: build
        if: ${pythonSrcFiles}   # Only if python source files are found
        output:
            - ${pythonDist}
            - ${pythonWheel}
        input:
            - ${pythonSrcFiles}
            - ${pythonSetupCfg}
        builder: nmk_python.build.PackageBuilder
        params:
            setup: ${pythonSetupPy}
            artifacts: ${pythonArtifacts}

    # Python module install
    py.install:
        description: Install python package
        emoji: ":snake:.:inbox_tray:"
        deps:
            - py.build
        appendToDeps: build
        if: ${pythonSrcFiles}   # Only if python source files are found
        input: ${pythonWheel}
        output: 
            - ${ROOTDIR}/${venvName}
            - ${venvState}
        builder: nmk_base.venv.VenvUpdateBuilder
        params:
            pip_args: ${venvPipArgs}
